---
groups:

- name: noble
  jobs:
  - build-ubuntu-noble-light-stemcell
  - run-upload-noble-test
  - bats-ubuntu-noble-light-stemcell
  - test-ubuntu-noble-light-stemcell
  - publish-noble-light-stemcell

- name: jammy
  jobs:
  - build-ubuntu-jammy-light-stemcell
  - run-upload-jammy-test-2
  - bats-ubuntu-jammy-light-stemcell-2
  - test-ubuntu-jammy-light-stemcell-2
  - publish-jammy-light-stemcell

- name: bionic
  jobs:
    - build-ubuntu-bionic-light-stemcell
    - run-upload-bionic-test
    - bats-ubuntu-bionic-light-stemcell
    - test-ubuntu-bionic-light-stemcell
    - publish-bionic-light-stemcell

shared:
- &put-stemcells-index
  put: stemcells-index
  params:
    repository: stemcells-index-output
    rebase: true
  on_success:
    put: notify
    params:
      text_file: notification/success
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &create-light-stemcell
  task: build-stemcell
  file: builder-src/ci/tasks/build.yml
  input_mapping:
    input-stemcell: stemcell
    builder-src: builder-src
    aliyun-cli: aliyun-cli
  output_mapping:
    light-stemcell: light-stemcell
    notification: notification
  params:
    image_description: ((create_stemcell_description))
    image_region: ((create_stemcell_region))
    image_access_key: ((create_stemcell_access_key))
    image_secret_key: ((create_stemcell_secret_key))
    image_bucket_name: ((create_stemcell_bucket))
    image_destinations: ((create_stemcell_image_destinations))
  on_success:
    put: notify
    params:
      text_file: notification/success
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &prepare-director
  task: prepare-director
  file: pipelines/shared/tasks/prepare-director.yml
  params: &prepare-director-params
    INFRASTRUCTURE:             alicloud
    DIRECTOR_VARS_FILE:         ((alicloud_bosh_director_vars_file))
    OPTIONAL_OPS_FILE:  |
      -o pipelines/shared/assets/ops/remove-hm.yml
      -o bosh-deployment/external-ip-with-registry-not-recommended.yml
      -o pipelines/shared/assets/ops/remove-provider-cert.yml
  input_mapping:
    stemcell: stemcell
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &deploy-director
  task: deploy-director
  file: pipelines/shared/tasks/deploy-director.yml
  input_mapping:
    stemcell: stemcell
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &ensure-terminated
  task: ensure-terminated
  file: bosh-cpi-src/ci/tasks/ensure-terminated.yml
  params:
    ALICLOUD_ACCESS_KEY_ID:     ((alicloud_access_key__primary))
    ALICLOUD_ACCESS_KEY_SECRET: ((alicloud_secret_key__primary))
    ALICLOUD_DEFAULT_REGION:    ((alicloud_region__primary))
- &teardown
  task: teardown
  file: pipelines/shared/tasks/teardown.yml
- &run-upload-test
  task: run-stemcell-upload-tests
  file: builder-src/ci/tasks/run-upload-test.yml
  input_mapping:
    stemcell: stemcell
    builder-src: builder-src
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &put-environment
  task: put-environment
  file: bosh-cpi-src/ci/tasks/put-environment.yml
  params: &put-environment-params
    access_key: ((alicloud_access_key__primary))
    secret_key: ((alicloud_secret_key__primary))
    region:     ((alicloud_region__primary))
    remote_state_access_key: ((terraform_backend_access_key))
    remote_state_secret_key: ((terraform_backend_secret_key))
    remote_state_bucket:     ((terraform_backend_bucket))
    remote_state_region:     ((terraform_backend_region))
    remote_state_file_path:  "bosh-alicloud-light-stemcell-state"
    public_key: ((PUBLIC_KEY))
    terraform_source: bosh-cpi-src/ci/assets/terraform
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &publish-stemcell-and-checksum
  task: publish-stemcell-and-checksum
  file: builder-src/ci/tasks/publish-stemcell-and-checksum.yml
  input_mapping:
    builder-src: builder-src
    light-stemcell: stemcell
  params:
    ALICLOUD_ACCESS_KEY_ID: ((alicloud_publish_light_stemcells_access_key_id))
    ALICLOUD_SECRET_ACCESS_KEY: ((alicloud_publish_light_stemcells_secret_access_key))
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &ensure-light-stemcell-ready
  task: ensure-light-stemcell-ready
  file: builder-src/ci/tasks/ensure-stemcell-ready.yml
  input_mapping:
#   This is heavy stemcell because of its name is custome image name
    input-stemcell: stemcell
    notification: notification
    builder-src: builder-src
    aliyun-cli: aliyun-cli
  params:
    image_access_key: ((create_stemcell_access_key))
    image_secret_key: ((create_stemcell_secret_key))
    image_region: ((create_stemcell_region))
    image_destinations: ((create_stemcell_image_destinations))
  on_failure:
    put: notify
    params:
      text_file: notification/failed

- &run-bats
  task: run-bats
  file: pipelines/shared/tasks/run-bats.yml
  params:
    INFRASTRUCTURE:     alicloud
    STEMCELL_NAME:      bosh-alicloud-kvm-ubuntu-jammy-go_agent
    BAT_INFRASTRUCTURE: alicloud
    BAT_NETWORKING:     manual
    BAT_RSPEC_FLAGS:    "--tag ~multiple_manual_networks --tag ~raw_ephemeral_storage --tag ~persistent_disk"
  on_failure:
    put: notify
    params:
      text: "[bosh-alicloud-light-stemcell-builder Failed]\nRunning the task run-bats failed. Please check it."

- &test-stemcell-ubuntu-noble
  task: test-stemcell-ubuntu-noble
  file: pipelines/shared/tasks/test-stemcell.yml
  params:
    BOSH_os_name: ubuntu-noble
    package: ipv4director
  on_failure:
    put: notify
    params:
      text: "[bosh-alicloud-light-stemcell-builder Failed]\nRunning task test-stemcell-ubuntu-noble failed. Please check it."


- &test-stemcell-ubuntu-jammy
  task: test-stemcell-ubuntu-jammy
  file: pipelines/shared/tasks/test-stemcell.yml
  params:
    BOSH_os_name: ubuntu-jammy
    package: ipv4director
  on_failure:
    put: notify
    params:
      text: "[bosh-alicloud-light-stemcell-builder Failed]\nRunning task test-stemcell-ubuntu-jammy failed. Please check it."

- &run-bats-bionic
  task: run-bats
  file: pipelines/shared/tasks/run-bats.yml
  params:
    INFRASTRUCTURE:     alicloud
    STEMCELL_NAME:      bosh-alicloud-kvm-ubuntu-bionic-go_agent
    BAT_INFRASTRUCTURE: alicloud
    BAT_NETWORKING:     manual
    BAT_RSPEC_FLAGS:    "--tag ~multiple_manual_networks --tag ~raw_ephemeral_storage --tag ~persistent_disk"
  on_failure:
    put: notify
    params:
      text: "[bosh-alicloud-light-stemcell-builder Failed]\nRunning the task run-bats failed. Please check it."

- &test-stemcell-ubuntu-bionic
  task: test-stemcell-ubuntu-bionic
  file: pipelines/shared/tasks/test-stemcell.yml
  params:
    BOSH_os_name: ubuntu-bionic
    package: ipv4director
  on_failure:
    put: notify
    params:
      text: "[bosh-alicloud-light-stemcell-builder Failed]\nRunning task test-stemcell-ubuntu-bionic failed. Please check it."

- &update-cloud-config
  task: update-cloud-config
  file: pipelines/shared/tasks/update-cloud-config.yml
  params: &update-cloud-config-params
    INFRASTRUCTURE: alicloud
    DIRECTOR_VARS_FILE: ((alicloud_bosh_director_vars_file))
  on_failure:
    put: notify
    params:
      text: "[bosh-alicloud-light-stemcell-builder Failed]\nRunning task update-cloud-config failed. Please check it."

jobs:
- name: build-ubuntu-noble-light-stemcell
  serial: true
  plan:
    - in_parallel:
        - get: stemcell
          trigger: true
          resource: ubuntu-noble-stemcell
          version: every
          params:
            preserve_filename: true
        - get: builder-src
          trigger: false
          resource: builder-src
        - get: aliyun-cli
          trigger: false
          resource: aliyun-cli
    - *create-light-stemcell
    # deploy bosh director and validate the light stemcell
    - *ensure-light-stemcell-ready
    - put: ubuntu-noble-light-stemcell
      params: {file: light-stemcell/*.tgz}

- name: run-upload-noble-test
  serial: true
  plan:
    - in_parallel:
        - get: bosh-cpi-src
          trigger: false
          resource: bosh-cpi-src-in
        - get: builder-src
          trigger: false
          resource: builder-src
        - get: cpi-release
          resource: bosh-cpi-release
        - get: bosh-release
          resource: bosh-release
        - get: stemcell
          trigger: true
          resource: ubuntu-noble-light-stemcell
          passed: [build-ubuntu-noble-light-stemcell]
        - get: bosh-deployment
        - get: bosh-cli
        - get: jq-blob
        - get: pipelines
        - get: aliyun-cli
          resource: aliyun-cli
    - do:
        - <<: *put-environment
          params:
            <<: *put-environment-params
            env_name: ubuntu-noble-stemcell-upload-test
            delete_on_failure: true
        - *prepare-director
        - *deploy-director
        #    run bosh upload-stemcells xxx
        - *run-upload-test
      ensure:
        do:
          #      - *teardown
          - *ensure-terminated
          - <<: *put-environment
            params:
              <<: *put-environment-params
              env_name: ubuntu-noble-stemcell-upload-test
              generate_random_name: true
              action: destroy

- name: bats-ubuntu-noble-light-stemcell
  #  serial: true
  plan:
    - in_parallel:
        - get: cpi-release
          trigger: false
          resource: bosh-cpi-release
        - get: bosh-release
          resource: bosh-release
        - get: bosh-cpi-src
          resource: bosh-cpi-src-in
        - get: stemcell
          trigger: true
          resource: ubuntu-noble-light-stemcell
          passed: [build-ubuntu-noble-light-stemcell]
        - get: bosh-deployment
        - get: pipelines
        - get: bosh-cli
        - get: bats
        - get: jq-blob
        - get: aliyun-cli
          resource: aliyun-cli
    - <<: *put-environment
      params:
        <<: *put-environment-params
        env_name: ubuntu-noble-stemcell-bats
        delete_on_failure: true
        terraform_source: bosh-cpi-src/ci/assets/terraform
    - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE:  |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
        - do:
            - <<: *deploy-director
            - <<: *run-bats
          ensure:
            do:
              - <<: *teardown
              - <<: *ensure-terminated
      ensure:
        do:
          - <<: *put-environment
            params:
              <<: *put-environment-params
              env_name: ubuntu-noble-stemcell-bats
              action: destroy
              terraform_source: bosh-cpi-src/ci/assets/terraform

- name: test-ubuntu-noble-light-stemcell
  #  serial: true
  plan:
    - in_parallel:
        - get: bosh-release
        - get: bosh-cpi-src
          resource: bosh-cpi-src-in
        - get: cpi-release
          resource: bosh-cpi-release
        - get: stemcell
          trigger: true
          resource: ubuntu-noble-light-stemcell
          passed: [build-ubuntu-noble-light-stemcell]
        - get: pipelines
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: syslog-release
        - get: os-conf-release
        - get: bosh-linux-stemcell-builder-noble
    - <<: *put-environment
      params:
        <<: *put-environment-params
        env_name: alicloud-test-stemcell-ubuntu-noble
        delete_on_failure: true
    - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE: |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
        - do:
            - <<: *deploy-director
            - <<: *update-cloud-config
            - <<: *test-stemcell-ubuntu-noble
          ensure:
            do:
              - <<: *teardown
      ensure:
        do:
          - <<: *put-environment
            params:
              <<: *put-environment-params
              env_name: alicloud-test-stemcell-ubuntu-noble
              action: destroy

- name: publish-noble-light-stemcell
  #  serial: true
  plan:
    - in_parallel:
        #    - {get: stemcell,    trigger: true,  resource: ubuntu-noble-light-stemcell, passed: [run-upload-test, bats-ubuntu-noble-light-stemcell, test-ubuntu-noble-light-stemcell]}
        - get: stemcell
          trigger: true
          resource: ubuntu-noble-light-stemcell
          #        passed: [run-upload-noble-test, bats-ubuntu-noble-light-stemcell]
          passed: [build-ubuntu-noble-light-stemcell]
        - get: builder-src
          resource: builder-src
        - get: aliyun-cli
          resource: aliyun-cli
        - get: stemcells-index
        - get: bosh-cli
    - *publish-stemcell-and-checksum
    - *put-stemcells-index

## start jammy
- name: build-ubuntu-jammy-light-stemcell
  serial: true
  plan:
  - in_parallel:
      - get: stemcell
        trigger: true
        resource: ubuntu-jammy-stemcell
        version: every
        params:
          preserve_filename: true
      - get: builder-src
        trigger: false
        resource: builder-src
      - get: aliyun-cli
        trigger: false
        resource: aliyun-cli
  - *create-light-stemcell
# deploy bosh director and validate the light stemcell
  - *ensure-light-stemcell-ready
  - put: ubuntu-jammy-light-stemcell
    params: {file: light-stemcell/*.tgz}

- name: run-upload-jammy-test-2
  serial: true
  plan:
  - in_parallel:
      - get: bosh-cpi-src
        trigger: false
        resource: bosh-cpi-src-in
      - get: builder-src
        trigger: false
        resource: builder-src
      - get: cpi-release
        resource: bosh-cpi-release
      - get: bosh-release
        resource: bosh-release
      - get: stemcell
        trigger: true
        resource: ubuntu-jammy-light-stemcell
        passed: [build-ubuntu-jammy-light-stemcell]
      - get: bosh-deployment
      - get: bosh-cli
      - get: jq-blob
      - get: pipelines
      - get: aliyun-cli
        resource: aliyun-cli
  - do:
    - <<: *put-environment
      params:
        <<: *put-environment-params
        env_name: ubuntu-jammy-stemcell-upload-test
        delete_on_failure: true
    - *prepare-director
    - *deploy-director
#    run bosh upload-stemcells xxx
    - *run-upload-test
    ensure:
      do:
#      - *teardown
      - *ensure-terminated
      - <<: *put-environment
        params:
          <<: *put-environment-params
          env_name: ubuntu-jammy-stemcell-upload-test
          generate_random_name: true
          action: destroy

- name: bats-ubuntu-jammy-light-stemcell-2
#  serial: true
  plan:
  - in_parallel:
      - get: cpi-release
        trigger: false
        resource: bosh-cpi-release
      - get: bosh-release
        resource: bosh-release
      - get: bosh-cpi-src
        resource: bosh-cpi-src-in
      - get: stemcell
        trigger: true
        resource: ubuntu-jammy-light-stemcell
        passed: [build-ubuntu-jammy-light-stemcell]
      - get: bosh-deployment
      - get: pipelines
      - get: bosh-cli
      - get: bats
      - get: jq-blob
      - get: aliyun-cli
        resource: aliyun-cli
  - <<: *put-environment
    params:
      <<: *put-environment-params
      env_name: ubuntu-jammy-stemcell-bats
      delete_on_failure: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
  - do:
    - <<: *prepare-director
      params:
        <<: *prepare-director-params
        OPTIONAL_OPS_FILE:  |
          -o pipelines/shared/assets/ops/remove-hm.yml
          -o bosh-deployment/external-ip-with-registry-not-recommended.yml
          -o pipelines/shared/assets/ops/remove-provider-cert.yml
    - do:
        - <<: *deploy-director
        - <<: *run-bats
      ensure:
        do:
          - <<: *teardown
          - <<: *ensure-terminated
    ensure:
      do:
        - <<: *put-environment
          params:
            <<: *put-environment-params
            env_name: ubuntu-jammy-stemcell-bats
            action: destroy
            terraform_source: bosh-cpi-src/ci/assets/terraform

- name: test-ubuntu-jammy-light-stemcell-2
#  serial: true
  plan:
    - in_parallel:
        - get: bosh-release
        - get: bosh-cpi-src
          resource: bosh-cpi-src-in
        - get: cpi-release
          resource: bosh-cpi-release
        - get: stemcell
          trigger: true
          resource: ubuntu-jammy-light-stemcell
          passed: [build-ubuntu-jammy-light-stemcell]
        - get: pipelines
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: syslog-release
        - get: os-conf-release
        - get: bosh-linux-stemcell-builder
    - <<: *put-environment
      params:
        <<: *put-environment-params
        env_name: alicloud-test-stemcell-ubuntu-jammy
        delete_on_failure: true
    - do:
      - <<: *prepare-director
        params:
          <<: *prepare-director-params
          OPTIONAL_OPS_FILE: |
            -o pipelines/shared/assets/ops/remove-hm.yml
            -o bosh-deployment/external-ip-with-registry-not-recommended.yml
            -o pipelines/shared/assets/ops/remove-provider-cert.yml
      - do:
        - <<: *deploy-director
        - <<: *update-cloud-config
        - <<: *test-stemcell-ubuntu-jammy
        ensure:
          do:
            - <<: *teardown
      ensure:
        do:
          - <<: *put-environment
            params:
              <<: *put-environment-params
              env_name: alicloud-test-stemcell-ubuntu-jammy
              action: destroy

- name: publish-jammy-light-stemcell
#  serial: true
  plan:
  - in_parallel:
#    - {get: stemcell,    trigger: true,  resource: ubuntu-jammy-light-stemcell, passed: [run-upload-test, bats-ubuntu-jammy-light-stemcell-2, test-ubuntu-jammy-light-stemcell-2]}
      - get: stemcell
        trigger: true
        resource: ubuntu-jammy-light-stemcell
#        passed: [run-upload-jammy-test-2, bats-ubuntu-jammy-light-stemcell-2]
        passed: [build-ubuntu-jammy-light-stemcell]
      - get: builder-src
        resource: builder-src
      - get: aliyun-cli
        resource: aliyun-cli
      - get: stemcells-index
      - get: bosh-cli
  - *publish-stemcell-and-checksum
  - *put-stemcells-index


##### start bionic
- name: build-ubuntu-bionic-light-stemcell
  serial: true
  plan:
    - in_parallel:
        - get: stemcell
          trigger: true
          resource: ubuntu-bionic-stemcell
          version: every
          params:
            preserve_filename: true
        - get: builder-src
          trigger: false
          resource: builder-src
        - get: aliyun-cli
          trigger: false
          resource: aliyun-cli
    - *create-light-stemcell
    # deploy bosh director and validate the light stemcell
    - *ensure-light-stemcell-ready
    - put: ubuntu-bionic-light-stemcell
      params: {file: light-stemcell/*.tgz}

- name: run-upload-bionic-test
  serial: true
  plan:
    - in_parallel:
        - get: bosh-cpi-src
          trigger: false
          resource: bosh-cpi-src-in
        - get: builder-src
          trigger: false
          resource: builder-src
        - get: cpi-release
          resource: bosh-cpi-release
        - get: bosh-release
          resource: bosh-release
        - get: stemcell
          trigger: true
          resource: ubuntu-bionic-light-stemcell
          passed: [build-ubuntu-bionic-light-stemcell]
        - get: bosh-deployment
        - get: bosh-cli
        - get: jq-blob
        - get: pipelines
        - get: aliyun-cli
          resource: aliyun-cli
    - do:
        - <<: *put-environment
          params:
            <<: *put-environment-params
            env_name: ubuntu-bionic-stemcell-upload-test
            delete_on_failure: true
        - *prepare-director
        - *deploy-director
        #    run bosh upload-stemcells xxx
        - *run-upload-test
      ensure:
        do:
          #      - *teardown
          - *ensure-terminated
          - <<: *put-environment
            params:
              <<: *put-environment-params
              env_name: ubuntu-bionic-stemcell-upload-test
              generate_random_name: true
              action: destroy

- name: bats-ubuntu-bionic-light-stemcell
  serial: true
  plan:
    - in_parallel:
        - get: cpi-release
          trigger: false
          resource: bosh-cpi-release
        - get: bosh-release
          resource: bosh-release
        - get: bosh-cpi-src
          resource: bosh-cpi-src-in
        - get: stemcell
          trigger: true
          resource: ubuntu-bionic-light-stemcell
          passed: [build-ubuntu-bionic-light-stemcell]
        - get: bosh-deployment
        - get: pipelines
        - get: bosh-cli
        - get: bats
        - get: jq-blob
        - get: aliyun-cli
          resource: aliyun-cli
    - <<: *put-environment
      params:
        <<: *put-environment-params
        env_name: ubuntu-bionic-stemcell-bats
        delete_on_failure: true
        terraform_source: bosh-cpi-src/ci/assets/terraform
    - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE:  |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
        - do:
            - <<: *deploy-director
            - <<: *run-bats-bionic
          ensure:
            do:
              - <<: *teardown
              - <<: *ensure-terminated
      ensure:
        do:
          - <<: *put-environment
            params:
              <<: *put-environment-params
              env_name: ubuntu-bionic-stemcell-bats
              action: destroy
              terraform_source: bosh-cpi-src/ci/assets/terraform

- name: test-ubuntu-bionic-light-stemcell
  serial: true
  plan:
    - in_parallel:
        - get: bosh-release
        - get: bosh-cpi-src
          resource: bosh-cpi-src-in
        - get: cpi-release
          resource: bosh-cpi-release
        - get: stemcell
          trigger: true
          resource: ubuntu-bionic-light-stemcell
          passed: [build-ubuntu-bionic-light-stemcell]
        - get: pipelines
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: syslog-release
        - get: os-conf-release
        - get: bosh-linux-stemcell-builder-bionic
    - <<: *put-environment
      params:
        <<: *put-environment-params
        env_name: alicloud-test-stemcell-ubuntu-bionic
        delete_on_failure: true
    - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE: |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
        - do:
            - <<: *deploy-director
            - <<: *update-cloud-config
            - <<: *test-stemcell-ubuntu-bionic
          ensure:
            do:
              - <<: *teardown
      ensure:
        do:
          - <<: *put-environment
            params:
              <<: *put-environment-params
              env_name: alicloud-test-stemcell-ubuntu-bionic
              action: destroy

- name: publish-bionic-light-stemcell
  serial: true
  plan:
    - in_parallel:
        #    - {get: stemcell,    trigger: true,  resource: ubuntu-bionic-light-stemcell, passed: [run-upload-test, bats-ubuntu-bionic-light-stemcell-2, test-ubuntu-bionic-light-stemcell-2]}
        - get: stemcell
          trigger: true
          resource: ubuntu-bionic-light-stemcell
#          passed: [run-upload-bionic-test, bats-ubuntu-bionic-light-stemcell]
          passed: [build-ubuntu-bionic-light-stemcell]
        - get: builder-src
          resource: builder-src
        - get: aliyun-cli
          resource: aliyun-cli
        - get: stemcells-index
        - get: bosh-cli
    - *publish-stemcell-and-checksum
    - *put-stemcells-index
##### stop bionic
resources:
- name: stemcells-index
  type: git
  source:
    uri: git@github.com:cloudfoundry/stemcells-alicloud-index.git
    branch: publish
    private_key: ((stemcells_index__github_key))

- name: builder-src
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bosh-alicloud-light-stemcell-builder
    branch: master

- name: ubuntu-noble-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-alicloud-kvm-ubuntu-noble
    force_regular: true

- name: ubuntu-noble-light-stemcell
  type: s3
  source:
    regexp:            light-bosh-stemcell-(\d+\.\d+)-alicloud-kvm-ubuntu-noble.tgz
    bucket:            "bosh-alicloud-light-stemcells-eu"
    region:            "eu-central-1"
    access_key_id:     ((alicloud_publish_light_stemcells_access_key_id))
    secret_access_key: ((alicloud_publish_light_stemcells_secret_access_key))
    endpoint:          oss-eu-central-1.aliyuncs.com


- name: ubuntu-jammy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-alicloud-kvm-ubuntu-jammy-go_agent
    force_regular: true

- name: ubuntu-jammy-light-stemcell
  type: s3
  source:
    regexp:            light-bosh-stemcell-(\d+\.\d+)-alicloud-kvm-ubuntu-jammy-go_agent.tgz
    bucket:            "bosh-alicloud-light-stemcells-eu"
    region:            "eu-central-1"
    access_key_id:     ((alicloud_publish_light_stemcells_access_key_id))
    secret_access_key: ((alicloud_publish_light_stemcells_secret_access_key))
    endpoint:          oss-eu-central-1.aliyuncs.com


- name: ubuntu-bionic-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-alicloud-kvm-ubuntu-bionic-go_agent
    force_regular: true

- name: ubuntu-bionic-light-stemcell
  type: s3
  source:
    regexp:            light-bosh-stemcell-(\d+\.\d+)-alicloud-kvm-ubuntu-bionic-go_agent.tgz
    bucket:            "bosh-alicloud-light-stemcells-eu"
    region:            "eu-central-1"
    access_key_id:     ((alicloud_publish_light_stemcells_access_key_id))
    secret_access_key: ((alicloud_publish_light_stemcells_secret_access_key))
    endpoint:          oss-eu-central-1.aliyuncs.com


#- name: aliyun-cli
#  type: github-release
#  source:
#    owner: aliyun
#    repository: aliyun-cli
#    insecure: true

- name: aliyun-cli
  type: s3
  source:
    access_key_id: ((aliyun_cli_access_key))
    secret_access_key: ((aliyun_cli_secret_key))
    bucket: ((aliyun_cli_bucket))
    regexp: .*-cli-linux-3\.0\.(\d+)-amd64\.tgz
    region_name: ((aliyun_cli_region))
    endpoint: oss-((aliyun_cli_region)).aliyuncs.com

- name: pipelines
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-cpi-certification
    branch: master

- name: bosh-cpi-src-in
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/bosh-alicloud-cpi-release.git
    branch: dev
    paths:
      - ci/**

- name: bosh-cpi-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-alicloud-cpi-release
    insecure: true
    tag_filter: "v(.*)"
- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment
    branch: master
- name: bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
- name: bosh-cli
  type: s3
  source:
    regexp: bosh-cli-([0-9.]+)-linux-amd64
    cloudfront_url: https://dulfnruy35dwq.cloudfront.net
    bucket: bosh-cli-artifacts
    region_name: us-east-1
- name: jq-blob
  type: git
  source:
    uri: https://github.com/archieves/jq-blob
- name: bats
  type: git
  source:
    uri: https://github.com/aliyun/bosh-acceptance-tests
    branch: alicloud
- name: notify
  type: slack-notification
  source:
    url: ((slack-webhook))

- name: bosh-linux-stemcell-builder-noble
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-linux-stemcell-builder
    branch: ubuntu-noble/master

- name: bosh-linux-stemcell-builder
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-linux-stemcell-builder
    branch: ubuntu-jammy/master

- name: bosh-linux-stemcell-builder-bionic
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-linux-stemcell-builder
    branch: ubuntu-bionic/master

- name: syslog-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/syslog-release
- name: os-conf-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/os-conf-release


resource_types:
- name: metalink-repository
  type: docker-image
  source:
    repository: dpb587/metalink-repository-resource
- name: terraform_type
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: latest
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
